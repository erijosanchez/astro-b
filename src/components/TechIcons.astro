---
const icons = [
    { icon: "fa-brands fa-html5 H", angle: 0 },
    { icon: "fa-brands fa-css3-alt C", angle: 45 },
    { icon: "fa-brands fa-js J", angle: 90 },
    { icon: "fa-brands fa-react R", angle: 135 },
    { icon: "fa-brands fa-laravel L", angle: 180 },
    { icon: "fa-brands fa-php P", angle: 225 },
    { icon: "fa-brands fa-wordpress W", angle: 270 },
    { icon: "astro", angle: 315 },
];
---

<style>
    .profile-container {
        position: relative;
        width: 400px;
        height: 400px;
        margin: auto;
        perspective: 1000px;
        cursor: pointer;
    }

    .astro-icon {
        width: 26px;
        height: 26px;
        filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
        transition:
            transform 0.3s ease,
            filter 0.3s ease;
    }

    .astro-icon:hover {
        transform: scale(1.2);
        filter: drop-shadow(0 6px 8px rgba(0, 0, 0, 0.2));
    }

    .H{
        color: rgb(210, 29, 29);
    }

    .C{
        color: rgb(76, 124, 220);
    }

    .J{
        color: rgb(227, 222, 56);
    }

    .R {
        color: rgb(25, 142, 201);
    }

    .L{
        color: rgb(186, 30, 30);
    }

    .P{
        color: rgb(136, 34, 214);    }

    .W{
        color: rgb(55, 110, 157);
    }

    .glow-ring {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 280px;
        height: 280px;
        border-radius: 50%;
        background: radial-gradient(
            circle,
            rgba(0, 123, 255, 0.2),
            transparent 70%
        );
        animation: pulsate 3s ease-in-out infinite alternate;
        z-index: 1;
    }

    .profile-image {
        position: relative;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        z-index: 2;
        transition: transform 0.6s ease;
    }

    .profile-image:hover {
        transform: scale(1.05) rotate(-5deg);
    }

    .tech-orbit-icon {
        position: absolute;
        width: 45px;
        height: 45px;
        top: 45%;
        left: 45%;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transform: rotate(var(--angle)) translateX(240px)
            rotate(calc(-1 * var(--angle)));
        transform-origin: center;
        animation: continuousOrbitalWaves 12s linear infinite;
        animation-delay: var(--delay);
        z-index: 99;
    }

    .icon-inner {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        animation: verticalWave 3s ease-in-out infinite;
        animation-delay: var(--delay);
        font-size: 23px;
        background: rgba(255, 255, 255, 0.2);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 50%;
    }

    @keyframes continuousOrbitalWaves {
        0%,
        100% {
            transform: rotate(var(--angle)) translateX(240px)
                rotate(calc(-1 * var(--angle)));
        }
        50% {
            transform: rotate(calc(var(--angle) + 180deg)) translateX(240px)
                rotate(calc(-1 * (var(--angle) + 180deg)));
        }
    }

    @keyframes verticalWave {
        0%,
        100% {
            transform: translateY(var(--random-vertical-offset));
        }
        50% {
            transform: translateY(calc(-1.5 * var(--random-vertical-offset)));
        }
    }

    @keyframes fireworksDispersion {
        0% {
            transform: rotate(var(--angle)) translateX(240px)
                rotate(calc(-1 * var(--angle)));
            opacity: 1;
        }
        70% {
            transform: rotate(var(--random-angle))
                translateX(var(--random-distance))
                translateY(var(--random-vertical));
            opacity: 0.5;
        }
        100% {
            transform: rotate(var(--angle)) translateX(240px)
                rotate(calc(-1 * var(--angle)));
            opacity: 1;
        }
    }

    @keyframes pulsate {
        0% {
            transform: scale(0.9);
            opacity: 0.7;
        }
        100% {
            transform: scale(1.1);
            opacity: 1;
        }
    }
</style>

<div class="profile-container">
    <div class="glow-ring"></div>
    <img
        class="profile-image"
        src="assets/2pofe.jpg"
        alt="Imagen de perfil Erick Sanchez"
    />
    {
        icons.map((icon, index) => (
            <div
                class="tech-orbit-icon"
                style={`--angle: ${icon.angle}deg; --delay: ${index * 0}s; --random-vertical-offset: ${(Math.random() * 20 - 10).toFixed(2)}px;`}
            >
                <div class="icon-inner">
                    {icon.icon === "astro" ? (
                        <img
                            src="Astro.svg"
                            alt="Astro Icon"
                            class="astro-icon"
                        />
                    ) : (
                        <i class={icon.icon} />
                    )}
                </div>
            </div>
        ))
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const profileImage = document.querySelector(".profile-image");
        const icons = document.querySelectorAll(".tech-orbit-icon");

        profileImage.addEventListener("click", () => {
            // Dispersión de los íconos
            icons.forEach((icon, index) => {
                const randomAngle = Math.random() * 360;
                const randomDistance = Math.random() * 500 + 200;
                const randomVertical = (Math.random() - 0.5) * 150;

                icon.style.animation = `fireworksDispersion 2s ease-out forwards ${index * 0.1}s`;
                icon.style.setProperty("--random-angle", `${randomAngle}deg`);
                icon.style.setProperty(
                    "--random-distance",
                    `${randomDistance}px`,
                );
                icon.style.setProperty(
                    "--random-vertical",
                    `${randomVertical}px`,
                );
            });

            // Reiniciar la órbita después de la dispersión
            setTimeout(() => {
                icons.forEach((icon, index) => {
                    icon.style.animation = ""; // Reinicia la animación para que se pueda aplicar de nuevo
                    void icon.offsetWidth; // Forzar el reinicio del ciclo de animación
                    icon.style.animation = `continuousOrbitalWaves 12s linear infinite ${index * 0.13}s`;
                });
            }, 2500); // Tiempo suficiente para que termine fireworksDispersion
        });
    });
</script>
